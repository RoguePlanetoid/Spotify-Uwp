<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spotify.Uwp</name>
    </assembly>
    <members>
        <member name="T:Spotify.Uwp.TokenType">
            <summary>
            Token Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TokenType.Access">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TokenType.User">
            <summary>
            User Token
            </summary>
        </member>
        <member name="T:Spotify.Uwp.LoginType">
            <summary>
            Login Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.LoginType.AuthorisationCode">
            <summary>
            Authorisation Code Flow
            </summary>
        </member>
        <member name="F:Spotify.Uwp.LoginType.ClientCredentials">
            <summary>
            Client Credentials Flow
            </summary>
        </member>
        <member name="F:Spotify.Uwp.LoginType.ImplicitGrant">
            <summary>
            Implicit Grant Flow
            </summary>
        </member>
        <member name="T:Spotify.Uwp.PlaylistType">
            <summary>
            Playlist Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.PlaylistType.Search">
            <summary>
            Search for Playlist
            </summary>
        </member>
        <member name="F:Spotify.Uwp.PlaylistType.Featured">
            <summary>
            Featured Playlists
            </summary>
        </member>
        <member name="F:Spotify.Uwp.PlaylistType.CategoriesPlaylists">
            <summary>
            Category Playlists
            </summary>
        </member>
        <member name="F:Spotify.Uwp.PlaylistType.User">
            <summary>
            User's Playlists
            </summary>
        </member>
        <member name="T:Spotify.Uwp.TrackType">
            <summary>
            Track Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.Favourites">
            <summary>
            Favourite Tracks
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.Search">
            <summary>
            Search for Track
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.Recommended">
            <summary>
            Recommended Track by Genre
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.Playlist">
            <summary>
            Playlist Tracks
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.Album">
            <summary>
            Album Tracks
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.Artist">
            <summary>
            Artist Top Tracks
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.UserRecentlyPlayed">
            <summary>
            User's Recently Played Tracks
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.UserSaved">
            <summary>
            User's Saved Tracks
            </summary>
        </member>
        <member name="F:Spotify.Uwp.TrackType.UserTop">
            <summary>
            User's Top Tracks
            </summary>
        </member>
        <member name="T:Spotify.Uwp.AlbumType">
            <summary>
            Album Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.AlbumType.Favourites">
            <summary>
            Favourite Albums
            </summary>
        </member>
        <member name="F:Spotify.Uwp.AlbumType.Search">
            <summary>
            Search for Album
            </summary>
        </member>
        <member name="F:Spotify.Uwp.AlbumType.NewReleases">
            <summary>
            New Releases
            </summary>
        </member>
        <member name="F:Spotify.Uwp.AlbumType.Artist">
            <summary>
            Artist Albums
            </summary>
        </member>
        <member name="F:Spotify.Uwp.AlbumType.UserSaved">
            <summary>
            User's Saved Albums
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ArtistType">
            <summary>
            Artist Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.ArtistType.Favourites">
            <summary>
            Favourite Artists
            </summary>
        </member>
        <member name="F:Spotify.Uwp.ArtistType.Search">
            <summary>
            Search for Artist
            </summary>
        </member>
        <member name="F:Spotify.Uwp.ArtistType.Related">
            <summary>
            Related Artists
            </summary>
        </member>
        <member name="F:Spotify.Uwp.ArtistType.UserFollowed">
            <summary>
            User's Followed Artists
            </summary>
        </member>
        <member name="F:Spotify.Uwp.ArtistType.UserTop">
            <summary>
            User's Top Artists
            </summary>
        </member>
        <member name="T:Spotify.Uwp.FavouriteType">
            <summary>
            Favourite Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.FavouriteType.Album">
            <summary>
            Favourite Albums
            </summary>
        </member>
        <member name="F:Spotify.Uwp.FavouriteType.Artist">
            <summary>
            Favourite Artists
            </summary>
        </member>
        <member name="F:Spotify.Uwp.FavouriteType.Track">
            <summary>
            Favourite Tracks
            </summary>
        </member>
        <member name="T:Spotify.Uwp.FollowType">
            <summary>
            Follow Type
            </summary>
        </member>
        <member name="F:Spotify.Uwp.FollowType.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="F:Spotify.Uwp.FollowType.User">
            <summary>
            User
            </summary>
        </member>
        <member name="F:Spotify.Uwp.FollowType.Playlist">
            <summary>
            Playlist
            </summary>
        </member>
        <member name="T:Spotify.Uwp.UserTopTimeFrame">
            <summary>
            User Top Time Frame
            </summary>
        </member>
        <member name="F:Spotify.Uwp.UserTopTimeFrame.LongTerm">
            <summary>
            Calculated from several years of data and including all new data as it becomes available
            </summary>
        </member>
        <member name="F:Spotify.Uwp.UserTopTimeFrame.MediumTerm">
            <summary>
            Approximately last 6 months
            </summary>
        </member>
        <member name="F:Spotify.Uwp.UserTopTimeFrame.ShortTerm">
            <summary>
            Approximately last 4 weeks
            </summary>
        </member>
        <member name="T:Spotify.Uwp.TokenRequiredArgs">
            <summary>
            Token Required Arguments
            </summary>
        </member>
        <member name="M:Spotify.Uwp.TokenRequiredArgs.#ctor(Spotify.Uwp.TokenType)">
            <summary>
            Constructor
            </summary>
            <param name="tokenType">Token Type</param>
        </member>
        <member name="P:Spotify.Uwp.TokenRequiredArgs.TokenType">
            <summary>
            Token Type
            </summary>
        </member>
        <member name="T:Spotify.Uwp.Exceptions.AuthException">
            <summary>
            Auth Exception
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Exceptions.AuthException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.Uwp.Exceptions.AuthValueException">
            <summary>
            Auth Value Exception
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Exceptions.AuthValueException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.Uwp.Exceptions.AuthStateException">
            <summary>
            Auth State Exception
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Exceptions.AuthStateException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.Uwp.Exceptions.TokenRequiredException">
            <summary>
            Token Required Exception
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Exceptions.TokenRequiredException.#ctor(Spotify.Uwp.TokenType)">
            <summary>
            Constructor
            </summary>
            <param name="tokenType">Token Type</param>
        </member>
        <member name="P:Spotify.Uwp.Exceptions.TokenRequiredException.TokenType">
            <summary>
            Token Type
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ISpotifySdkClient">
            <summary>
            Spotify SDK Client
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.SpotifyClient">
            <summary>
            Spotify Client
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.LoginRedirectUri">
            <summary>
            Login Redirect Uri
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.LoginState">
            <summary>
            Login State
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.Country">
            <summary>
            ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.Locale">
            <summary>
            ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.Limit">
            <summary>
            Number of items to return per request
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.UserTopTimeFrame">
            <summary>
            Time Frame for User Top Artists and Tracks. Long Term: calculated from several years of data and including all new data as it becomes available, Medium Term: (Default) approximately last 6 months, Short Term: approximately last 4 weeks
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.IsUserLoggedIn">
            <summary>
            Is User Logged In
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.Token">
            <summary>
            Token View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ISpotifySdkClient.Favourites">
            <summary>
            List Favourite View Model 
            </summary>
        </member>
        <member name="E:Spotify.Uwp.ISpotifySdkClient.TokenRequiredEvent">
            <summary>
            Token Required Event
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.Set(System.Globalization.CultureInfo)">
            <summary>
            Set
            </summary>
            <param name="cultureInfo">Culture Info</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.Set(System.String,System.String)">
            <summary>
            Set
            </summary>
            <param name="country">ISO 3166-1 alpha-2 country code e.g. GB</param>
            <param name="locale">ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetLoginUri(Spotify.Uwp.LoginType,Spotify.Uwp.ViewModels.ScopeViewModel,System.Boolean)">
            <summary>
            Get Login Uri
            </summary>
            <param name="type">(Required) LoginType.AuthorisationCode or LoginType.ImplicitGrant</param>
            <param name="scope">(Optional) Authorisation Scopes</param>
            <param name="showDialog">(Optional) Whether or not to force the user to approve the app again if they’ve already done so.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetLoginTokenAsync(Spotify.Uwp.LoginType,System.Uri)">
            <summary>
            Get Login Token
            </summary>
            <param name="type">Login Type</param>
            <param name="responseUri">(Required for LoginType.AuthorisationCode or LoginType.ImplicitGrant) Response Uri</param>
            <returns>AccessToken on Success, Null if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.AuthValueException">AuthValueException</exception>
            <exception cref="T:Spotify.Uwp.Exceptions.AuthStateException">AuthStateException</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetCategoryAsync(System.String)">
            <summary>
            Get Category
            </summary>
            <param name="id">Category Id</param>
            <returns>Category View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetArtistAsync(System.String)">
            <summary>
            Get Artist
            </summary>
            <param name="id">Artist Spotify Id</param>
            <returns>Artist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetAlbumAsync(System.String)">
            <summary>
            Get Album
            </summary>
            <param name="id">Album Spotify Id</param>
            <returns>Album View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetPlaylistAsync(System.String)">
            <summary>
            Get Playlist
            </summary>
            <param name="id">Playlist Spotify Id</param>
            <returns>Playlist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetTrackAsync(System.String)">
            <summary>
            Get Track
            </summary>
            <param name="id">Track Spotify Id</param>
            <returns>Track View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetAudioAnalysisAsync(System.String)">
            <summary>
            Get Audio Analysis
            </summary>
            <param name="id">Track Spotify Id</param>
            <returns>AudioAnalysis View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetUserAsync(System.String)">
            <summary>
            Get User
            </summary>
            <param name="id">User Spotify Id</param>
            <returns>Public User View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.GetCurrentUserAsync">
            <summary>
            Get Current User
            <para>Scopes: UserReadPrivate, UserReadEmail, UserReadBirthDate, UserReadPrivate</para>
            </summary>
            <returns>Current User View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListCategoriesAsync">
            <summary>
            List Category
            </summary>
            <returns>Navigation View Model of Category View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListCategoriesAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.CategoryViewModel})">
            <summary>
            List Categories
            </summary>
            <param name="navigation">Navigation View Model of Category View Model</param>
            <returns>Navigation View Model of Category View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListArtistsAsync(Spotify.Uwp.ArtistType,System.String)">
            <summary>
            List Artists
            </summary>
            <param name="type">Artist Type</param>
            <param name="id">Artist Spotify Id</param>
            <returns>Navigation View Model of Artist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListArtistsAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.ArtistViewModel})">
            <summary>
            List Artists
            </summary>
            <param name="navigation">Navigation View Model of Artist View Model</param>
            <returns>Navigation View Model of Artist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListAlbumsAsync(Spotify.Uwp.AlbumType,System.String)">
            <summary>
            List Albums
            </summary>
            <param name="type">Album Type</param>
            <param name="id">Album Spotify Id</param>
            <returns>Navigation View Model of Album View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListAlbumsAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.AlbumViewModel})">
            <summary>
            List Albums
            </summary>
            <param name="navigation">Navigation View Model of Album View Model</param>
            <returns>Navigation View Model of Album View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListPlaylistsAsync(Spotify.Uwp.PlaylistType,System.String)">
            <summary>
            List Playlists
            </summary>
            <param name="type">Playlist Type</param>
            <param name="id">Playlist Spotify Id</param>
            <returns>Navigation View Model of Playlist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListPlaylistsAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.PlaylistViewModel})">
            <summary>
            List Playlists
            </summary>
            <param name="navigation">Navigation View Model of Playlist View Model</param>
            <returns>Navigation View Model of Playlist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListRecommendationGenresAsync">
            <summary>
            List Recommendation Genres
            </summary>
            <returns>List of Recommendation View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListTracksAsync(Spotify.Uwp.TrackType,System.String)">
            <summary>
            List Tracks
            </summary>
            <param name="type">Track Type</param>
            <param name="id">Track Spotify Id</param>
            <returns>Navigation ViewModel of Track View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListTracksAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.TrackViewModel})">
            <summary>
            List Tracks
            </summary>
            <param name="navigation">Navigation View Model of Track View Model</param>
            <returns>Navigation ViewModel of Track View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListAudioFeatureAsync(System.String)">
            <summary>
            List Audio Features
            </summary>
            <param name="id">Track Spotify Id</param>
            <returns>List of Audio Feature View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.ListAudioFeaturesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            List Audio Features
            </summary>
            <param name="ids">List of Track Spotify Id</param>
            <returns>List of List of Audio Feature View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.IsFollowing(System.Collections.Generic.List{System.String},Spotify.Uwp.FollowType,System.String)">
            <summary>
            Is Following Artists or Users and Check if Users Follow a Playlist
            <para>Scopes: FollowRead, PlaylistReadPrivate</para>
            </summary>
            <param name="ids">(Required for FollowType.Artist or FollowType.User) List of the Artist or the User Spotify IDs to check</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <param name="playlistId">(Required for FollowType.Playlist) The Spotify ID of the playlist</param>
            <returns>List of True or False values</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.IsFollowing(System.String,Spotify.Uwp.FollowType)">
            <summary>
            Is Following
            <para>Scopes: FollowRead, PlaylistReadPrivate</para>
            </summary>
            <param name="id">(Required) Artist, User or Playlist Spotify ID to check</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <returns>True if Is, False if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.Follow(System.Collections.Generic.List{System.String},Spotify.Uwp.FollowType,System.String)">
            <summary>
            Follow
            <para>Scopes: FollowModify</para>
            </summary>
            <param name="ids">(Required for FollowType.Artist or FollowType.User) Artist or the User Spotify IDs to Follow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <param name="playlistId">(Required for FollowType.Playlist) The Spotify ID of the playlist</param>
            <returns>True if Successful, False if Not Successful</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.Follow(System.String,Spotify.Uwp.FollowType)">
            <summary>
            Follow
            <para>Scopes: FollowModify</para>
            </summary>
            <param name="id">(Required) Artist, User or Playlist Spotify ID to Follow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <returns>True if Is, False if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.Unfollow(System.Collections.Generic.List{System.String},Spotify.Uwp.FollowType,System.String)">
            <summary>
            Unfollow
            <para>Scopes: FollowModify, PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="ids">(Required for FollowType.Artist or FollowType.User) Artist or the User Spotify IDs to Follow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <param name="playlistId">(Required for FollowType.Playlist) The Spotify ID of the playlist</param>
            <returns>True if Successful, False if Not Successful</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.ISpotifySdkClient.Unfollow(System.String,Spotify.Uwp.FollowType)">
            <summary>
            Unfollow
            <para>Scopes: FollowModify, PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="id">(Required) Artist or the User Spotify ID to Unfollow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <returns>True if Is, False if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Spotify.Uwp.Internal.SpotifySdkClient">
            <summary>
            Spotify SDK Client
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.OnTokenRequired(Spotify.Uwp.TokenType)">
            <summary>
            On Token Required 
            </summary>
            <param name="tokenType">Token Type</param>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">If No Event Subscribers Event will be Raised</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.#ctor(System.String,System.String,System.Uri,System.String)">
            <summary>
            Spotify SDK Client
            </summary>
            <param name="clientId">(Required) Spotify Client Id</param>
            <param name="clientSecret">Spotify Client Secret</param>
            <param name="loginRedirectUri">Login Redirect Uri</param>
            <param name="loginState">Login State</param>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.Set(System.Globalization.CultureInfo)">
            <summary>
            Set
            </summary>
            <param name="cultureInfo">Culture Info</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.Set(System.String,System.String)">
            <summary>
            Set
            </summary>
            <param name="country">ISO 3166-1 alpha-2 country code e.g. GB</param>
            <param name="locale">ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB</param>
            <returns></returns>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.SpotifyClient">
            <summary>
            Spotify Client
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.LoginRedirectUri">
            <summary>
            Login Redirect Uri
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.LoginState">
            <summary>
            Login State
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.Country">
            <summary>
            ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.Locale">
            <summary>
            ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.Limit">
            <summary>
            Number of items to return per request
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.UserTopTimeFrame">
            <summary>
            Time Frame for User Top Artists and Tracks. Long Term: calculated from several years of data and including all new data as it becomes available, Medium Term: (Default) approximately last 6 months, Short Term: approximately last 4 weeks
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.IsUserLoggedIn">
            <summary>
            Is User Logged In
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.Token">
            <summary>
            Token View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.Internal.SpotifySdkClient.Favourites">
            <summary>
            List Favourite View Model 
            </summary>
        </member>
        <member name="E:Spotify.Uwp.Internal.SpotifySdkClient.TokenRequiredEvent">
            <summary>
            Token Required Event
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetLoginUri(Spotify.Uwp.LoginType,Spotify.Uwp.ViewModels.ScopeViewModel,System.Boolean)">
            <summary>
            Get Login Uri
            </summary>
            <param name="type">(Required) LoginType.AuthorisationCode or LoginType.ImplicitGrant</param>
            <param name="scope">(Optional) Authorisation Scopes</param>
            <param name="showDialog">(Optional) Whether or not to force the user to approve the app again if they’ve already done so.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetLoginTokenAsync(Spotify.Uwp.LoginType,System.Uri)">
            <summary>
            Get Login Token
            </summary>
            <param name="type">Login Type</param>
            <param name="responseUri">(Required for LoginType.AuthorisationCode or LoginType.ImplicitGrant) Response Uri</param>
            <returns>AccessToken on Success, Null if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.AuthValueException">AuthValueException</exception>
            <exception cref="T:Spotify.Uwp.Exceptions.AuthStateException">AuthStateException</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetCategoryAsync(System.String)">
            <summary>
            Get Category
            </summary>
            <param name="id">Category Id</param>
            <returns>Category View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetArtistAsync(System.String)">
            <summary>
            Get Artist
            </summary>
            <param name="id">Artist Spotify Id</param>
            <returns>Artist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetAlbumAsync(System.String)">
            <summary>
            Get Album
            </summary>
            <param name="id">Album Spotify Id</param>
            <returns>Album View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetPlaylistAsync(System.String)">
            <summary>
            Get Playlist
            </summary>
            <param name="id">Playlist Spotify Id</param>
            <returns>Playlist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetTrackAsync(System.String)">
            <summary>
            Get Track
            </summary>
            <param name="id">Track Spotify Id</param>
            <returns>Track View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetAudioAnalysisAsync(System.String)">
            <summary>
            Get Audio Analysis
            </summary>
            <param name="id">Track Spotify Id</param>
            <returns>AudioAnalysis View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetUserAsync(System.String)">
            <summary>
            Get User
            </summary>
            <param name="id">User Spotify Id</param>
            <returns>Public User View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.GetCurrentUserAsync">
            <summary>
            Get Current User
            <para>Scopes: UserReadPrivate, UserReadEmail, UserReadBirthDate, UserReadPrivate</para>
            </summary>
            <returns>Current User View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListCategoriesAsync">
            <summary>
            List Category
            </summary>
            <returns>Navigation ViewModel of Category View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListCategoriesAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.CategoryViewModel})">
            <summary>
            List Categories
            </summary>
            <param name="navigation">Navigation View Model of Category View Model</param>
            <returns>Navigation ViewModel of Category View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListArtistsAsync(Spotify.Uwp.ArtistType,System.String)">
            <summary>
            List Artists
            </summary>
            <param name="type">Artist Type</param>
            <param name="id">Artist Spotify Id</param>
            <returns>Navigation ViewModel of Artist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListArtistsAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.ArtistViewModel})">
            <summary>
            List Artists
            </summary>
            <param name="navigation">Navigation View Model of Artist View Model</param>
            <returns>Navigation View Model of Artist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListAlbumsAsync(Spotify.Uwp.AlbumType,System.String)">
            <summary>
            List Albums
            </summary>
            <param name="type">Album Type</param>
            <param name="id">Album Spotify Id</param>
            <returns>Navigation View Model of Album View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListAlbumsAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.AlbumViewModel})">
            <summary>
            List Albums
            </summary>
            <param name="navigation">Navigation View Model of Album View Model</param>
            <returns>Navigation View Model of Album View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListPlaylistsAsync(Spotify.Uwp.PlaylistType,System.String)">
            <summary>
            List Playlists
            </summary>
            <param name="type">Playlist Type</param>
            <param name="id">Playlist Spotify Id</param>
            <returns>Navigation View Model of Playlist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListPlaylistsAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.PlaylistViewModel})">
            <summary>
            List Playlists
            </summary>
            <param name="navigation">Navigation View Model of Playlist View Model</param>
            <returns>Navigation View Model of Playlist View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListRecommendationGenresAsync">
            <summary>
            List Recommendation Genres
            </summary>
            <returns>List of Recommendation View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListTracksAsync(Spotify.Uwp.TrackType,System.String)">
            <summary>
            List Tracks
            </summary>
            <param name="type">Track Type</param>
            <param name="id">Track Spotify Id</param>
            <returns>Navigation View Model of Track View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListTracksAsync(Spotify.Uwp.ViewModels.NavigationViewModel{Spotify.Uwp.ViewModels.TrackViewModel})">
            <summary>
            List Tracks
            </summary>
            <param name="navigation">Navigation View Model of Track View Model</param>
            <returns>Navigation View Model of Track View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListAudioFeatureAsync(System.String)">
            <summary>
            List Audio Features
            </summary>
            <param name="id">Track Spotify Id</param>
            <returns>List of Audio Feature View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.ListAudioFeaturesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            List Audio Features
            </summary>
            <param name="ids">List of Track Spotify Id</param>
            <returns>List of List of Audio Feature View Model</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.IsFollowing(System.Collections.Generic.List{System.String},Spotify.Uwp.FollowType,System.String)">
            <summary>
            Is Following Artists or Users and Check if Users Follow a Playlist
            <para>Scopes: FollowRead, PlaylistReadPrivate</para>
            </summary>
            <param name="ids">(Required for FollowType.Artist or FollowType.User) List of the Artist or the User Spotify IDs to check</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <param name="playlistId">(Required for FollowType.Playlist) The Spotify ID of the playlist</param>
            <returns>List of True or False values</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.IsFollowing(System.String,Spotify.Uwp.FollowType)">
            <summary>
            Is Following
            <para>Scopes: FollowRead, PlaylistReadPrivate</para>
            </summary>
            <param name="id">(Required) Artist, User or Playlist Spotify ID to check</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <returns>True if Is, False if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.Follow(System.Collections.Generic.List{System.String},Spotify.Uwp.FollowType,System.String)">
            <summary>
            Follow
            <para>Scopes: FollowModify</para>
            </summary>
            <param name="ids">(Required for FollowType.Artist or FollowType.User) Artist or the User Spotify IDs to Follow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <param name="playlistId">(Required for FollowType.Playlist) The Spotify ID of the playlist</param>
            <returns>True if Successful, False if Not Successful</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.Follow(System.String,Spotify.Uwp.FollowType)">
            <summary>
            Follow
            <para>Scopes: FollowModify</para>
            </summary>
            <param name="id">(Required) Artist, User or Playlist Spotify ID to Follow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <returns>True if Is, False if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.Unfollow(System.Collections.Generic.List{System.String},Spotify.Uwp.FollowType,System.String)">
            <summary>
            Unfollow
            <para>Scopes: FollowModify, PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="ids">(Required for FollowType.Artist or FollowType.User) Artist or the User Spotify IDs to Follow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <param name="playlistId">(Required for FollowType.Playlist) The Spotify ID of the playlist</param>
            <returns>True if Successful, False if Not Successful</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Spotify.Uwp.Internal.SpotifySdkClient.Unfollow(System.String,Spotify.Uwp.FollowType)">
            <summary>
            Unfollow
            <para>Scopes: FollowModify, PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="id">(Required) Artist or the User Spotify ID to Unfollow</param>
            <param name="type">(Required) Either Artist, User or Playlist</param>
            <returns>True if Is, False if Not</returns>
            <exception cref="T:Spotify.Uwp.Exceptions.TokenRequiredException">Token Required and TokenRequiredEvent not Subscribed to</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Spotify.Uwp.Internal.RelayCommand">
            <summary>
            Relay Command
            </summary>
        </member>
        <member name="E:Spotify.Uwp.Internal.RelayCommand.CanExecuteChanged">
            <summary>
            Raised when RaiseCanExecuteChanged is called.
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Internal.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:Spotify.Uwp.Internal.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Boolean})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="M:Spotify.Uwp.Internal.RelayCommand.CanExecute(System.Object)">
            <summary>
            Determines whether this <see cref="T:Spotify.Uwp.Internal.RelayCommand"/> can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.RelayCommand.Execute(System.Object)">
            <summary>
            Executes the <see cref="T:Spotify.Uwp.Internal.RelayCommand"/> on the current command target.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null.
            </param>
        </member>
        <member name="M:Spotify.Uwp.Internal.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Method used to raise the <see cref="E:Spotify.Uwp.Internal.RelayCommand.CanExecuteChanged"/> event
            to indicate that the return value of the <see cref="M:Spotify.Uwp.Internal.RelayCommand.CanExecute(System.Object)"/>
            method has changed.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.Internal.Extensions">
            <summary>
            Extension Methods
            </summary>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.GetLargeImage(System.Collections.Generic.IList{Spotify.Uwp.ViewModels.ImageViewModel})">
            <summary>
            Large Image
            </summary>
            <param name="images"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.GetMediumImage(System.Collections.Generic.IList{Spotify.Uwp.ViewModels.ImageViewModel})">
            <summary>
            Medium Image
            </summary>
            <param name="images"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.GetSmallImage(System.Collections.Generic.IList{Spotify.Uwp.ViewModels.ImageViewModel})">
            <summary>
            Small Image
            </summary>
            <param name="images"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.GetArtist(System.Collections.Generic.IList{Spotify.Uwp.ViewModels.ArtistViewModel})">
            <summary>
            Get Artist
            </summary>
            <param name="artists"></param>
            <returns>Artist</returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.AsTimeSpan(System.Int64)">
            <summary>
            As TimeSpan
            </summary>
            <param name="value"></param>
            <returns>TimeSpan</returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.AsTimeSpanString(System.TimeSpan)">
            <summary>
            As TimeSpan String
            </summary>
            <param name="value"></param>
            <returns>TimeSpan String</returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.GetReleaseYear(System.String)">
            <summary>
            Get Release Year
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.Uwp.Internal.Extensions.GetSongs(System.Int32)">
            <summary>
            Get Songs
            </summary>
            <param name="total"></param>
            <returns></returns>
        </member>
        <member name="T:Spotify.Uwp.Internal.Mapping">
            <summary>
            Mapping
            </summary>
        </member>
        <member name="T:Spotify.Uwp.SpotifySdkClientFactory">
            <summary>
            Spotify SDK Client Factory
            </summary>
        </member>
        <member name="M:Spotify.Uwp.SpotifySdkClientFactory.CreateSpotifySdkClient(System.String,System.String,System.Uri,System.String)">
            <summary>
            Create Spotify SDK Client
            </summary>
            <param name="clientId">(Required) Spotify Client Id</param>
            <param name="clientSecret">Spotify Client Secret</param>
            <param name="loginRedirectUri">Login Redirect Uri</param>
            <param name="loginState">Login State</param>
            <returns>Spotify SDK Client</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.AlbumViewModel">
            <summary>
            Album View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.AlbumGroup">
            <summary>
            The field is present when getting an artist’s albums. Possible values are “album”, “single”, “compilation”, “appears_on”.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.AlbumType">
            <summary>
            The type of the album: one of "album" , "single" , or "compilation".
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Artists">
            <summary>
            The artists of the album. Each artist object includes a link in href to more detailed information about the artist.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.AvailableMarkets">
            <summary>
            The markets in which the album is available: ISO 3166-1 alpha-2 country codes
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Copyrights">
            <summary>
            The copyright statements of the album.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.ExternalId">
            <summary>
            Known external IDs for the album.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Genres">
            <summary>
            A list of the genres used to classify the album. For example: "Prog Rock" , "Post-Grunge"
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Label">
            <summary>
            The label for the album.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Popularity">
            <summary>
            The popularity of the album. The value will be between 0 and 100, with 100 being the most popular
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.ReleaseDate">
            <summary>
            The date the album was first released, for example 1981. Depending on the precision, it might be shown as 1981-12 or 1981-12-15
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.ReleaseDatePrecision">
            <summary>
            The precision with which release_date value is known: year , month , or day.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.TotalTracks">
            <summary>
            The total number of tracks
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Tracks">
            <summary>
            The tracks of the album.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.ReleaseYear">
            <summary>
            Release Year
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AlbumViewModel.Songs">
            <summary>
            Songs
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ArtistViewModel">
            <summary>
            Artist View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ArtistViewModel.Followers">
            <summary>
            Information about the followers of the artist.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ArtistViewModel.Genres">
            <summary>
            A list of the genres the artist is associated with. For example: "Prog Rock" , "Post-Grunge".
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ArtistViewModel.Popularity">
            <summary>
            The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.AssetViewModel">
            <summary>
            Asset View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AssetViewModel.Images">
            <summary>
            Images in various sizes, widest first.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AssetViewModel.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AssetViewModel.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AssetViewModel.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.AudioAnalysisViewModel">
            <summary>
            Audio Analysis View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AudioAnalysisViewModel.Bars">
            <summary>
            The time intervals of the bars throughout the track
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AudioAnalysisViewModel.Beats">
            <summary>
            The time intervals of beats throughout the track.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AudioAnalysisViewModel.Sections">
            <summary>
            Sections are defined by large variations in rhythm or timbre, e.g.chorus, verse, bridge, guitar solo, etc.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AudioAnalysisViewModel.Segments">
            <summary>
            Audio segments attempts to subdivide a song into many segments, with each segment containing a roughly consitent sound throughout its duration.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AudioAnalysisViewModel.Tatums">
            <summary>
            A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.AudioFeatureViewModel">
            <summary>
            Audio Feature View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.AudioFeatureViewModel.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.CategoryViewModel">
            <summary>
            Category View Model
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ToggleFavouriteViewModel">
            <summary>
            Toggle Favourite View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ToggleFavouriteViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ToggleFavouriteViewModel.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ToggleFavouriteViewModel.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.BaseViewModel">
            <summary>
            Base View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseViewModel.Type">
            <summary>
            The object type of the object
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseViewModel.Href">
            <summary>
            A link to the Web API endpoint providing full details of the object
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseViewModel.ExternalUrl">
            <summary>
            External URLs for this object.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseViewModel.Uri">
            <summary>
            The Spotify URI for the object
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseViewModel.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ContentViewModel">
            <summary>
            Content View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ContentViewModel.Id">
            <summary>
            The base-62 identifier that you can find at the end of the Spotify URI for the object
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ContentViewModel.Name">
            <summary>
            The name of the content
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.CopyrightViewModel">
            <summary>
            Copyright View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.CopyrightViewModel.Text">
            <summary>
            The copyright text for this album.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.CopyrightViewModel.Type">
            <summary>
            The type of copyright: C = the copyright, P = the sound recording (performance) copyright.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ErrorViewModel">
            <summary>
            Error View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ErrorViewModel.StatusCode">
            <summary>
            The HTTP status code
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ErrorViewModel.Message">
            <summary>
            A short description of the cause of the error. 
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ExternalIdViewModel">
            <summary>
            External Id View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ExternalIdViewModel.Isrc">
            <summary>
            International Standard Recording Code
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ExternalIdViewModel.Ean">
            <summary>
            International Article Number
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ExternalIdViewModel.Upc">
            <summary>
            Universal Product Code
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ToggleFollowViewModel">
            <summary>
            Toggle Follow View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ToggleFollowViewModel.Toggle(System.Boolean)">
            <summary>
            Toggle
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ToggleFollowViewModel.Get">
            <summary>
            Get
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ToggleFollowViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient,Spotify.Uwp.FollowType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="client">Spotify SDK Client</param>
            <param name="type">Follow Type</param>
            <param name="id">Id</param>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ToggleFollowViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ToggleFollowViewModel.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.FollowersViewModel">
            <summary>
            Followers View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.FollowersViewModel.Href">
            <summary>
            A link to the Web API endpoint providing full details of the followers; null if not available
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.FollowersViewModel.Total">
            <summary>
            The total number of followers.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ImageViewModel">
            <summary>
            Image View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ImageViewModel.Height">
            <summary>
            The image height in pixels. If unknown: null or not returned.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ImageViewModel.Url">
            <summary>
            The source URL of the image.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ImageViewModel.Width">
            <summary>
            The image width in pixels. If unknown: null or not returned.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.LinkedTrackViewModel">
            <summary>
            Linked Track View Model
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListAlbumViewModel">
            <summary>
            List Album View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListAlbumViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient,Spotify.Uwp.AlbumType,System.String)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
            <param name="type">Album Type</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListAlbumViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Album View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListArtistViewModel">
            <summary>
            List Artist View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListArtistViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient,Spotify.Uwp.ArtistType,System.String)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
            <param name="type">Artist Type</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListArtistViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Album View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListAudioFeatureViewModel">
            <summary>
            List Audio Feature View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListAudioFeatureViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient,System.String)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListAudioFeatureViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Album View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListCategoryViewModel">
            <summary>
            List Category View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListCategoryViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListCategoryViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Category View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListFavouriteViewModel">
            <summary>
            List Favourite View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ListFavouriteViewModel.AlbumIds">
            <summary>
            Album Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ListFavouriteViewModel.ArtistIds">
            <summary>
            Artist Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ListFavouriteViewModel.TrackIds">
            <summary>
            Track Spotify Ids
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListFavouriteViewModel.Set(Spotify.Uwp.FavouriteType,System.Collections.Generic.List{System.String})">
            <summary>
            Set
            </summary>
            <param name="type">Favourite Type</param>
            <param name="items">Items</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListFavouriteViewModel.Add(Spotify.Uwp.FavouriteType,System.String)">
            <summary>
            Add
            </summary>
            <param name="type">Type</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListFavouriteViewModel.Remove(Spotify.Uwp.FavouriteType,System.String)">
            <summary>
            Remove
            </summary>
            <param name="type">Type</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListFavouriteViewModel.Contains(Spotify.Uwp.FavouriteType,System.String)">
            <summary>
            Contains
            </summary>
            <param name="type"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListFavouriteViewModel.Any(Spotify.Uwp.FavouriteType)">
            <summary>
            Any
            </summary>
            <param name="type">Type</param>
            <returns>True if Present, False if Not</returns>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListFavouriteViewModel.Toggle(Spotify.Uwp.FavouriteType,System.String,System.Boolean)">
            <summary>
            Toggle
            </summary>
            <param name="type"></param>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListPlaylistViewModel">
            <summary>
            List Playlist View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListPlaylistViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient,Spotify.Uwp.PlaylistType,System.String)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
            <param name="type">Playlist Type</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListPlaylistViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Playlist View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListRecommendationViewModel">
            <summary>
            List Recommendation View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListRecommendationViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListRecommendationViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Album View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ListTrackViewModel">
            <summary>
            List Track View Model
            </summary>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListTrackViewModel.#ctor(Spotify.Uwp.ISpotifySdkClient,Spotify.Uwp.TrackType,System.String)">
            <summary>Constructor</summary>
            <param name="client">Music Client</param>
            <param name="type">Track Type</param>
            <param name="id">(Optional) Id</param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.ListTrackViewModel.LoadItemsAsync">
            <summary>
            Load Data
            </summary>
            <returns>IEnumerable of Track View Model</returns>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.BaseListViewModel`1">
            <summary>
            Base List View Model
            </summary>
            <typeparam name="TViewModel"></typeparam>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.BaseListViewModel`1.GetMoreItemsAsync(System.UInt32)">
            <summary>
            Load More Items
            </summary>
            <returns>LoadMoreItemsResult</returns>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.BaseListViewModel`1.#ctor(Spotify.Uwp.ISpotifySdkClient)">
            <summary>
            Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.BaseListViewModel`1.LoadMoreItemsAsync(System.UInt32)">
            <summary>
            Load More Items
            </summary>
            <param name="count">Count</param>
            <returns>LoadMoreItemsResult</returns>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.BaseListViewModel`1.LoadItemsAsync">
            <summary>
            Load Items
            </summary>
            <returns>IEnumerable of TViewModel</returns>
        </member>
        <member name="M:Spotify.Uwp.ViewModels.BaseListViewModel`1.Dispose">
            <summary>Dispose</summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseListViewModel`1.Client">
            <summary>
            Spotify SDK Client
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseListViewModel`1.Results">
            <summary>
            Navigation View Model of View Model Type
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.BaseListViewModel`1.HasMoreItems">
            <summary>
            Has More Items to get in Collection
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.NavigationViewModel`1">
            <summary>
            Navigation View Model
            </summary>
            <typeparam name="TViewModel">View Model Type</typeparam>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Back">
            <summary>
            Back Link
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Next">
            <summary>
            Next Link
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.NavigationViewModel`1.Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.PlaylistViewModel">
            <summary>
            Playlist View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.Collaborative">
            <summary>
            true if the owner allows other users to modify the playlist.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.Description">
            <summary>
            The playlist description. Only returned for modified, verified playlists, otherwise null.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.Followers">
            <summary>
            Information about the followers of the playlist.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.Owner">
            <summary>
            The user who owns the playlist
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.Public">
            <summary>
            The playlist’s public/private status: true the playlist is public, false the playlist is private, null the playlist status is not relevant
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.SnapshotId">
            <summary>
            The version identifier for the current playlist.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.PlaylistViewModel.Tracks">
            <summary>
            Information about the tracks of the playlist.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.CurrentUserViewModel">
            <summary>
            Current User View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.CurrentUserViewModel.BirthDate">
            <summary>
            The user’s date-of-birth.This field is only available when the current user has granted access to the user-read-birthdate scope.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.CurrentUserViewModel.Country">
            <summary>
            The country of the user, as set in the user’s account profile.An ISO 3166-1 alpha-2 country code.This field is only available when the current user has granted access to the user-read-private scope.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.CurrentUserViewModel.Email">
            <summary>
            The user’s email address, as entered by the user when creating their account. his field is only available when the current user has granted access to the user-read-email scope
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.UserViewModel">
            <summary>
            User View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.UserViewModel.DisplayName">
            <summary>
            The name displayed on the user’s profile. null if not available.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.UserViewModel.Followers">
            <summary>
            Information about the followers of this user.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.UserViewModel.Product">
            <summary>
            The user’s Spotify subscription level: “premium”, “free”, etc. This field is only available when the current user has granted access to the user-read-private scope.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.UserViewModel.IsPremium">
            <summary>
            Is Premium Subscription
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.RecommendationViewModel">
            <summary>
            Recommendation View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.RecommendationViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.RecommendationViewModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.RecommendationViewModel.Command">
            <summary>
            Comand
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.ScopeViewModel">
            <summary>
            Scope View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaylistReadPrivate">
            <summary>
            Read access to user's private playlists.
            <para>Required For</para>
            <para>Check if Users Follow a Playlist,
            Get a List of Current User's Playlists,
            Get a List of a User's Playlists</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaylistModifyPrivate">
            <summary>
            Write access to a user's private playlists. 
            <para>Required For</para>
            <para>Follow a Playlist,
            Unfollow a Playlist,
            Add Tracks to a Playlist</para>
            <para>Change a Playlist's Details,
            Create a Playlist,
            Remove Tracks from a Playlist</para>
            <para>Reorder a Playlist's Tracks,
            Replace a Playlist's Tracks,
            Upload a Custom Playlist Cover Image</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaylistModifyPublic">
            <summary>
            Write access to a user's public playlists. 
            <para>Required For</para>
            <para>Follow a Playlist,
            Unfollow a Playlist,
            Add Tracks to a Playlist</para>
            <para>Change a Playlist's Details,
            Create a Playlist,
            Remove Tracks from a Playlist</para>
            <para>Reorder a Playlist's Tracks,
            Replace a Playlist's Tracks,
            Upload a Custom Playlist Cover Image</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaylistReadCollaborative">
            <summary>
            Include collaborative playlists when requesting a user's playlists. 
            <para>Required For</para>
            <para>Get a List of Current User's Playlists,
            Get a List of a User's Playlists</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ConnectModifyPlaybackState">
            <summary>
            Pause a User's Playback
            <para>Required For</para>
            <para>Seek To Position In Currently Playing Track,
            Set Repeat Mode On User’s Playback,
            Set Volume For User's Playback</para>
            <para>Skip User’s Playback To Next Track,
            Skip User’s Playback To Previous Track,
            Start/Resume a User's Playback</para>
            <para>Toggle Shuffle For User’s Playback
            Transfer a User's Playback</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ConnectReadCurrentlyPlaying">
            <summary>
            Read access to a user’s currently playing track
            <para>Required For</para>
            <para>Get the User's Currently Playing Track</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ConnectReadPlaybackState">
            <summary>
            Read access to a user’s player state.
            <para>Required For</para>
            <para>Get a User's Available Devices,
            Get Information About The User's Current Playback,
            Get the User's Currently Playing Track</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ListeningTopRead">
            <summary>
            Read access to a user's top artists and tracks. 
            <para>Required For</para>
            <para>Get a User's Top Artists and Tracks</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ListeningRecentlyPlayed">
            <summary>
            Read access to a user’s recently played tracks
            <para>Required For</para>
            <para>Get Current User's Recently Played Tracks</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaybackAppRemoteControl">
            <summary>
            Remote control playback of Spotify.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaybackStreaming">
            <summary>
            Control playback of a Spotify track. The user must have a Spotify Premium account. 
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.UserReadBirthDate">
            <summary>
            Read access to the user's birthdate.
            <para>Required For</para>
            <para>Get Current User's Profile</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.UserReadEmail">
            <summary>
            Read access to user’s email address. 
            <para>Required For</para>
            <para>Get Current User's Profile</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.UserReadPrivate">
            <summary>
            Read access to user’s subscription details (type of user account). 
            <para>Required For</para>
            <para>Search for an Item,
            Get Current User's Profile</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.UserGeneratedContentImageUpload">
            <summary>
            User Generated Content Image Upload
            <para>Required For</para>
            <para>Upload a Custom Playlist Cover Image</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.FollowRead">
            <summary>
            Read access to the list of artists and other users that the user follows.
            <para>Required For</para>
            <para>Check if Current User Follows Artists or Users,
            Get User's Followed Artists</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.FollowModify">
            <summary>
            Write/delete access to the list of artists and other users that the user follows.
            <para>Required For</para>
            <para>Follow Artists or Users,
            Unfollow Artists or Users</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.LibraryModify">
            <summary>
            Write/delete access to a user's "Your Music" library. 
            <para>Required For</para>
            <para>Remove Albums for Current User,
            Remove User's Saved Tracks,
            Save Albums for Current User
            Save Tracks for User</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.LibraryRead">
            <summary>
            Read access to a user's "Your Music" library.  
            <para>Required For</para>
            <para>Check User's Saved Albums
            Check User's Saved Tracks,
            Get Current User's Saved Albums
            Get a User's Saved Tracks</para>
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ReadAllAccess">
            <summary>
            Returns a new Scope ViewModel with all "read" scopes set to true
            Usage : ScopeViewModel.ReadAllAccess
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ModifyAllAccess">
            <summary>
            Returns a new Scope ViewModel with all "modify" scopes set to true
            Usage : ScopeViewModel.ModifyAllAccess
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaylistAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Playlists set to true
            Usage : ScopeViewModel.PlaylistAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.SpotifyConnectAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Spotify Connect set to true
            Usage : ScopeViewModel.SpotifyConnectAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.ListeningHistoryAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Listening History set to true
            Usage : ScopeViewModel.ListeningHistoryAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.PlaybackAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Playback set to true
            Usage : ScopeViewModel.PlaybackAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.UsersAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Users set to true
            Usage : Scope.UsersAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.FollowAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Users set to true
            Usage : Scope.FollowAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.LibraryAll">
            <summary>
            Returns a new Scope ViewModel with all scopes within the confines of Library set to true
            Usage : Scope.LibraryAll
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.ScopeViewModel.AllPermissions">
            <summary>
            Returns a new Scope ViewModel with all scopes set to true
            Usage : Scope.AllPermissions
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.SectionViewModel">
            <summary>
            Section View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.Loudness">
            <summary>
            The overall loudness of the section in decibels (dB).
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.Tempo">
            <summary>
            The overall estimated tempo of the section in beats per minute (BPM).  
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.TempoConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the tempo.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.Key">
            <summary>
            The estimated overall key of the section. The values in this field ranging from 0 to 11 mapping to pitches using standard Pitch Class notation
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.KeyConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the key.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.Mode">
            <summary>
            Indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived.This field will contain a 0 for “minor”, a 1 for “major”, or a -1 for no result.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.ModeConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the mode.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.TimeSignature">
            <summary>
            An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of “3/4”, to “7/4”.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SectionViewModel.TimeSignatureConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the time_signature.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.SegmentViewModel">
            <summary>
            Segment View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SegmentViewModel.LoudnessStart">
            <summary>
            The onset loudness of the segment in decibels (dB).
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SegmentViewModel.LoudnessMax">
            <summary>
            The peak loudness of the segment in decibels (dB). 
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SegmentViewModel.LoudnessMaxTime">
            <summary>
            The segment-relative offset of the segment peak loudness in seconds. 
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SegmentViewModel.LoudnessEnd">
            <summary>
            The offset loudness of the segment in decibels (dB).
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SegmentViewModel.Pitches">
            <summary>
            A “chroma” vector representing the pitch content of the segment, corresponding to the 12 pitch classes C, C#, D to B, with values ranging from 0 to 1 that describe the relative dominance of every pitch in the chromatic scale
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.SegmentViewModel.Timbre">
            <summary>
            Timbre is the quality of a musical note or sound that distinguishes different types of musical instruments, or voices.
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.TimeIntervalViewModel">
            <summary>
            Time Interval View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TimeIntervalViewModel.Start">
            <summary>
            The starting point in seconds.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TimeIntervalViewModel.Duration">
            <summary>
            The duration in seconds
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TimeIntervalViewModel.Confidence">
            <summary>
            The reliability confidence, from 0.0 to 1.0
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.TokenViewModel">
            <summary>
            Token View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.Token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.Refresh">
            <summary>
            Refresh
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.Expiration">
            <summary>
            Token Expiration Date
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.TokenType">
            <summary>
            Token Type
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.Scopes">
            <summary>
            Scopes
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.IsValid">
            <summary>
            Is Valid
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TokenViewModel.IsLoggedIn">
            <summary>
            Is Logged In
            </summary>
        </member>
        <member name="T:Spotify.Uwp.ViewModels.TrackViewModel">
            <summary>
            Track View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Album">
            <summary>
            The album on which the track appears.The album object includes a link in href to full information about the album.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Artists">
            <summary>
            The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Artist">
            <summary>
            Artist View Model
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.AvailableMarkets">
            <summary>
            A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.DiscNumber">
            <summary>
            The disc number(usually 1 unless the album consists of more than one disc).
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Duration">
            <summary>
            The track length in milliseconds.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.ExternalId">
            <summary>
            Known external IDs for the track.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.IsExplicit">
            <summary>
            Whether or not the track has explicit lyrics ( true = yes it does; false = no it does not OR unknown).
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.IsPlayable">
            <summary>
            Part of the response when Track Relinking is applied. If true , the track is playable in the given market. Otherwise false.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.LinkedFrom">
            <summary>
            Part of the response when Track Relinking is applied and is only part of the response if the track linking, in fact, exists
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Popularity">
            <summary>
            The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Restrictions">
            <summary>
            Part of the response when Track Relinking is applied, the original track is not available in the given market
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Preview">
            <summary>
            A link to a 30 second preview(MP3 format) of the track.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.TrackNumber">
            <summary>
            The number of the track. If an album has several discs, the track number is the number on the specified disc.
            </summary>
        </member>
        <member name="P:Spotify.Uwp.ViewModels.TrackViewModel.Length">
            <summary>
            Track Length
            </summary>
        </member>
        <member name="T:Spotify.Uwp.BaseNotifyPropertyChanged">
            <summary>
            Base Notify Property Changed 
            </summary>
        </member>
        <member name="E:Spotify.Uwp.BaseNotifyPropertyChanged.PropertyChanged">
            <summary>
            Property Changed Event
            </summary>
        </member>
        <member name="M:Spotify.Uwp.BaseNotifyPropertyChanged.NotifyPropertyChanged(System.String)">
            <summary>
            Notify Property Changed
            </summary>
            <param name="property">Member Name</param>
        </member>
        <member name="T:Spotify.Uwp.BaseClient">
            <summary>
            Base Client
            </summary>
        </member>
        <member name="M:Spotify.Uwp.BaseClient.#ctor(Spotify.Uwp.ISpotifySdkClient)">
            <summary>
            Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="P:Spotify.Uwp.BaseClient.Client">
            <summary>
            Spotify SDK Client
            </summary>
        </member>
    </members>
</doc>
